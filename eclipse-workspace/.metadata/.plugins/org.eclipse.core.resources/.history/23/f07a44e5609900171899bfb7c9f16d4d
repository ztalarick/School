'''
Created on Sep 12, 2017

@author: Zach
'''
from cs115 import  map, reduce

def tower(n):
    if n == 0: 
        return 1 
    return 2 ** tower(n - 1)
    
    
def tower_reduce(n):
    def power(x, y):
        return y ** x
    if n == 0:
        return 1
    return reduce(power, [2] * n)
    
def length(lst):
    if lst == []:
        return 0
    return 1 + length(lst[1:])
    
def reverse(lst):
    if lst == []:
        return []
    return reverse(lst[1:]) + [lst[0]]
    
    
def member (x, lst):
    if lst == []:
        return False
    if x == lst[0]:
        return True
    return member(x, lst[1:])

def power(x, y):
    if y == 0:
        return 1
    return x * power(x, y - 1) 

def power_tail(x, y):
    def power_tail_helper(x, y, accum):
        if y ==0:
            return accum
        return power_tail_helper(x, y-1, accum * x)
    return power_tail_helper(x, y, 1)

print(power_tail(2, 3))


